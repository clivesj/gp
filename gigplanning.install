<?php
// install file for Gigplanning

/* implementation hook_install */
function gigplanning_install() {
  if (db_table_exists('tenbbezetting')) {
    //hernoemen
	db_rename_table($ret, 'tenbbezetting', 'gp_optredens');
  }
  else {
    //create table
	drupal_install_schema('gigplanning');
  }
	/* create gp user roles if not present */
	$gp_roles = array('invaller', 'vaste speler');
	foreach ($gp_roles as $name) {
	  if (!user_role_load_by_name($name)) {
		  $role = new stdClass();
      $role->name = $name;
      // $role->weight = 10;
      user_role_save($role);
		}
	}
}

/**
 * implementation hook_uninstall 
 */
function gigplanning_uninstall() {
	/* delete gp user roles if present */
	$gp_roles = array('invaller', 'vaste speler');
	foreach ($gp_roles as $name) {
	  if (user_role_load_by_name($name)) {
			user_role_delete($name);
		}
	}
}

function gigplanning_update_7101() {

}
		
function gigplanning_update_6001() {
  if (!db_table_exists('gp_section_size')) {
  $schema['gp_section_size'] = array(
  'description' => t('TODO: please describe this table!'),
  'fields' => array(
    'id' => array(
      'description' => t('id key for table'),
      'type' => 'serial',
      'unsigned' => TRUE,
      'size' => 'tiny',
      'not null' => TRUE,
    ),
    'section_name' => array(
      'description' => t('human readable name of section'),
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
    ),
    'section_size' => array(
      'description' => t('default size of section'),
      'type' => 'int',
      'unsigned' => TRUE,
      'size' => 'tiny',
      'not null' => FALSE,
      'default' => 0,
    ),
  ),
  'primary key' => array('id'),
);

    $result = array();
    db_create_table($result, 'gp_section_size', $schema['gp_section_size']);
  }
  return $result;
} 

/* implementation hook_schema */
function gigplanning_schema() {
  $schema['gp_optredens'] = array(
    'description' => t('TODO: please describe this table!'),
    'fields' => array(
      'bezid' => array(
        'description' => t('TODO: please describe this field!'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => t('TODO: please describe this field!'),
        'type' => 'int',
        'not null' => FALSE,
      ),
      'uid' => array(
        'description' => t('TODO: please describe this field!'),
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'speel_status' => array(
        'description' => t('TODO: please describe this field!'),
        'type' => 'varchar',
        'length' => '16',
        'not null' => FALSE,
      ),
      'status' => array(
        'description' => t('TODO: please describe this field!'),
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'rem_7' => array(
        'description' => t('TODO: please describe this field!'),
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
        'default' => 0,
      ),
      'rem_2' => array(
        'description' => t('TODO: please describe this field!'),
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
        'default' => 0,
      ),
      'rem_1' => array(
        'description' => t('TODO: please describe this field!'),
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
        'default' => 0,
      ),
      'rem_0' => array(
        'description' => t('TODO: please describe this field!'),
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
        'default' => 0,
      ),
    ),
    'primary key' => array('bezid'),
  );
  
  $schema['gp_section_size'] = array(
  'description' => t('TODO: please describe this table!'),
  'fields' => array(
    'id' => array(
      'description' => t('id key for table'),
      'type' => 'serial',
      'unsigned' => TRUE,
      'size' => 'tiny',
      'not null' => TRUE,
    ),
    'section_name' => array(
      'description' => t('human readable name of section'),
      'type' => 'varchar',
      'length' => '255',
      'not null' => FALSE,
    ),
    'section_size' => array(
      'description' => t('default size of section'),
      'type' => 'int',
      'unsigned' => TRUE,
      'size' => 'tiny',
      'not null' => FALSE,
      'default' => 0,
    ),
  ),
  'primary key' => array('id'),
);

}


